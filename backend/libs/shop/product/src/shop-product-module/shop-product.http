# Get all products
GET http://localhost:3341/api/shop/products HTTP/1.1

###

# Get products with not correct filter

GET http://localhost:3341/api/shop/products?sortDirection=desc&sortBy=test&page=1 HTTP/1.1

###

# Get products with countStrings = [6,4]

GET http://localhost:3341/api/shop/products?sortDirection=desc&sortBy=createDate&page=1&countsStrings=6&countsStrings=4 HTTP/1.1

###

# Get products with typeCodes = Electro

GET http://localhost:3341/api/shop/products?typeCodes=Electro HTTP/1.1

###


# Get product by ID
GET http://localhost:3341/api/shop/products/db0d4d5c-62cf-4cb5-a150-c8cbb7f79815 HTTP/1.1

###

# Create a new product
POST http://localhost:3341/api/shop/products HTTP/1.1
Content-Type: application/json

{
  "name": "Fender Esquire",
  "description": "Бюджетная модель, которую Брюс Спрингстин переделал под себя и усовершенствовал",
  "photo": "2025/01/1246dd6d-8b8c-40a4-a128-bb5e20c44165.jpeg",
  "typeCode": "electric1",
  "barcode": "50684-345",
  "countStrings": 6,
  "price": 145.5
}

###

POST http://localhost:3341/api/shop/products HTTP/1.1
Content-Type: application/json

{
  "name": "Fender Esquire",
  "description": "Бюджетная модель, которую Брюс Спрингстин переделал под себя и усовершенствовал",
  "photo": "2025/01/1246dd6d-8b8c-40a4-a128-bb5e20c44165.jpeg",
  "typeCode": "Electro",
  "barcode": "50684-345",
  "countStrings": 12,
  "price": 145.5
}

###

# Delete the product by id
DELETE http://localhost:3341/api/shop/products/b75999e8-7a65-40e9-859a-4b31cfea62bf HTTP/1.1

###

# Update product by id
PUT http://localhost:3341/api/shop/products/db0d4d5c-62cf-4cb5-a150-c8cbb7f79815 HTTP/1.1
Content-Type: application/json

{
  "name": "Fender Esquire Измененное",
  "description": "Бюджетная модель, которую Брюс Спрингстин переделал под себя и усовершенствовал",
  "photo": "2025/01/1246dd6d-8b8c-40a4-a128-bb5e20c44165.jpeg",
  "typeCode": "Electro",
  "barcode": "50684-345",
  "countStrings": 4,
  "price": 145.5
}

###

